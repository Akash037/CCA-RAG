name: Deploy to Cloud Run

on:
  push:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE: advanced-rag-system
  REGION: us-central1

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Configure Docker for Artifact Registry
      run: gcloud auth configure-docker us-central1-docker.pkg.dev

    - name: Create Artifact Registry repository (if needed)
      run: |
        gcloud artifacts repositories create rag-system \
          --repository-format=docker \
          --location=us-central1 \
          --description="RAG System Docker repository" || true

    - name: Build and push Docker image
      run: |
        docker build -t us-central1-docker.pkg.dev/$PROJECT_ID/rag-system/$SERVICE:$GITHUB_SHA .
        docker push us-central1-docker.pkg.dev/$PROJECT_ID/rag-system/$SERVICE:$GITHUB_SHA

    - name: Deploy to Cloud Run
      run: |
        # Create individual environment variables for gcloud
        gcloud run deploy $SERVICE \
          --image us-central1-docker.pkg.dev/$PROJECT_ID/rag-system/$SERVICE:$GITHUB_SHA \
          --region $REGION \
          --platform managed \
          --allow-unauthenticated \
          --memory 2Gi \
          --cpu 2 \
          --min-instances 0 \
          --max-instances 10 \
          --timeout 300 \
          --port 8000 \
          --set-env-vars ENVIRONMENT=production \
          --set-env-vars DEBUG=false \
          --set-env-vars GOOGLE_CLOUD_PROJECT="${{ secrets.GCP_PROJECT_ID }}" \
          --set-env-vars GOOGLE_CLOUD_LOCATION=us-central1 \
          --set-env-vars VERTEX_AI_LOCATION=us-central1 \
          --set-env-vars DATABASE_URL="${{ secrets.DATABASE_URL }}" \
          --set-env-vars REDIS_URL="${{ secrets.REDIS_URL }}" \
          --set-env-vars SECRET_KEY="${{ secrets.SECRET_KEY }}" \
          --set-env-vars RAG_DOCUMENT_CORPUS_ID="${{ secrets.RAG_DOCUMENT_CORPUS_ID }}" \
          --set-env-vars RAG_MEMORY_CORPUS_ID="${{ secrets.RAG_MEMORY_CORPUS_ID }}" \
          --set-env-vars GOOGLE_DRIVE_FOLDER_ID="${{ secrets.GOOGLE_DRIVE_FOLDER_ID }}" \
          --set-env-vars GOOGLE_SHEETS_ID="${{ secrets.GOOGLE_SHEETS_SPREADSHEET_ID }}" \
          --set-env-vars ALLOWED_ORIGINS="*" \
          --set-env-vars GENERATION_MODEL=gemini-2.0-flash \
          --set-env-vars EMBEDDING_MODEL=text-embedding-005 \
          --set-env-vars ENABLE_GOOGLE_DRIVE_SYNC=true \
          --set-env-vars ENABLE_GOOGLE_SHEETS_LOGGING=true \
          --set-env-vars MAX_RETRIEVAL_DOCUMENTS=10 \
          --set-env-vars SIMILARITY_THRESHOLD=0.7 \
          --set-env-vars HYBRID_SEARCH_ALPHA=0.6 \
          --set-env-vars ENABLE_RERANKING=true \
          --set-env-vars MEMORY_TTL_HOURS=24 \
          --set-env-vars SESSION_TIMEOUT_MINUTES=30 \
          --set-env-vars MAX_CONVERSATION_HISTORY=50 \
          --set-env-vars LOG_LEVEL=INFO \
          --set-env-vars LOG_FORMAT=json \
          --set-env-vars GCP_SA_KEY_BASE64="${{ secrets.GCP_SA_KEY }}"

    - name: Get service URL
      run: |
        URL=$(gcloud run services describe $SERVICE --region $REGION --format 'value(status.url)')
        echo "üöÄ Deployment successful!"
        echo "üìç Service URL: $URL"
        echo "üîç Health check: $URL/health"

    - name: Test deployment
      run: |
        URL=$(gcloud run services describe $SERVICE --region $REGION --format 'value(status.url)')
        sleep 30
        curl -f "$URL/health" || (echo "‚ùå Health check failed" && exit 1)
        echo "‚úÖ Health check passed!"
